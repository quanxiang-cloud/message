name: message
env:
  PROJECT_MESSAGE: message
  PROJECT_EMAIL: email
  PROJECT_LETTER: letter
  PROJECT_AUTH: auth
  IMAGE_PREFIX: dockerhub.qingcloud.com/lowcode
on: [push, pull_request]
jobs:
  test:
    runs-on: self-hosted
    steps:
      - run: go test ./...
      - run: go test -cover ./...

  deploy_alpha:
    runs-on: self-hosted
    needs: [ test ]
    if: github.ref == 'refs/heads/alpha'
    steps:
      - run: GOOS=linux GOOSARCH=amd64 go build -o ${{ env.PROJECT_NAME }} ./cmd/.
      - run: /root/github-runners/dev_auto.sh ${{ env.PROJECT_MESSAGE }}
      - run: /root/github-runners/dev_auto.sh ${{ env.PROJECT_EMAIL }}
      - run: /root/github-runners/dev_auto.sh ${{ env.PROJECT_LETTER }}
      - run: /root/github-runners/dev_auto.sh ${{ env.PROJECT_AUTH }}

  build:
    runs-on: self-hosted
    needs: [ test ]
    if: startsWith(github.ref, 'refs/heads/release')
    steps:
      - run: go mod tidy
      - run: go mod vendor
      - run: echo IMAGE_TAG="v$(date "+%Y%m%d")-${GITHUB_SHA::7}" >> $GITHUB_ENV
      - run: KO_DOCKER_REPO=${{ env.IMAGE_PREFIX }}/${{ env.PROJECT_MESSAGE }} ko build -v -t=$IMAGE_TAG --bare --sbom=none ./cmd/${{ env.PROJECT_MESSAGE }}/.
      - run: KO_DOCKER_REPO=${{ env.IMAGE_PREFIX }}/${{ env.PROJECT_AUTH }} ko build -v -t=$IMAGE_TAG --bare --sbom=none ./cmd/${{ env.PROJECT_AUTH }}/.
      - run: KO_DOCKER_REPO=${{ env.IMAGE_PREFIX }}/${{ env.PROJECT_LETTER }} ko build -v -t=$IMAGE_TAG --bare --sbom=none ./cmd/${{ env.PROJECT_LETTER }}/.
      - run: KO_DOCKER_REPO=${{ env.IMAGE_PREFIX }}/${{ env.PROJECT_EMAIL }} ko build -v -t=$IMAGE_TAG --bare --sbom=none ./cmd/${{ env.PROJECT_EMAIL }}/.

  deploy_test:
    runs-on: self-hosted
    needs: [test,build]
    if: startsWith(github.ref, 'refs/heads/release')
    steps:
      - run: echo IMAGE_TAG="v$(date "+%Y%m%d")-${GITHUB_SHA::7}" >> $GITHUB_ENV
      - run: /opt/upImage.sh ${{ env.IMAGE_PREFIX }}/${{ env.PROJECT_MESSAGE }}:$IMAGE_TAG $GITHUB_REF_NAME
      - run: /opt/upImage.sh ${{ env.IMAGE_PREFIX }}/${{ env.PROJECT_EMAIL }}:$IMAGE_TAG $GITHUB_REF_NAME
      - run: /opt/upImage.sh ${{ env.IMAGE_PREFIX }}/${{ env.PROJECT_LETTER }}:$IMAGE_TAG $GITHUB_REF_NAME
      - run: /opt/upImage.sh ${{ env.IMAGE_PREFIX }}/${{ env.PROJECT_AUTH }}:$IMAGE_TAG $GITHUB_REF_NAME

  deploy_staging:
    runs-on: self-hosted
    needs: [test,build]
    if: ${{ github.ref_type == 'tag' }}
    steps:
      - run: echo IMAGE_TAG="v$(date "+%Y%m%d")-${GITHUB_SHA::7}" >> $GITHUB_ENV
      - run: helm upgrade ${{ env.PROJECT_NAME }} /root/quanxiang_charts_staging/${{ env.PROJECT_MESSAGE }} --kubeconfig ~/.kube/config_staging --set image.tag=$IMAGE_TAG --set image.repo=dockerhub.qingcloud.com/lowcode -n lowcode
      - run: helm upgrade ${{ env.PROJECT_NAME }} /root/quanxiang_charts_staging/${{ env.PROJECT_EMAIL }} --kubeconfig ~/.kube/config_staging --set image.tag=$IMAGE_TAG --set image.repo=dockerhub.qingcloud.com/lowcode -n lowcode
      - run: helm upgrade ${{ env.PROJECT_NAME }} /root/quanxiang_charts_staging/${{ env.PROJECT_LETTER }} --kubeconfig ~/.kube/config_staging --set image.tag=$IMAGE_TAG --set image.repo=dockerhub.qingcloud.com/lowcode -n lowcode
      - run: helm upgrade ${{ env.PROJECT_NAME }} /root/quanxiang_charts_staging/${{ env.PROJECT_AUTH }} --kubeconfig ~/.kube/config_staging --set image.tag=$IMAGE_TAG --set image.repo=dockerhub.qingcloud.com/lowcode -n lowcode
